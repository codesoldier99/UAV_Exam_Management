version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: uav_exam_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_DATABASE: uav_exam
      MYSQL_USER: uav_user
      MYSQL_PASSWORD: uav_password123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - uav_exam_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: uav_exam_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uav_exam_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: uav_exam_backend
    restart: always
    environment:
      DATABASE_URL: mysql+aiomysql://uav_user:uav_password123@mysql:3306/uav_exam
      SYNC_DATABASE_URL: mysql+pymysql://uav_user:uav_password123@mysql:3306/uav_exam
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-here-change-in-production
      BACKEND_CORS_ORIGINS: '["http://localhost:3000", "http://localhost:8080", "http://your-domain.com"]'
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    networks:
      - uav_exam_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  admin-frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    container_name: uav_exam_admin
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - uav_exam_network

  nginx:
    image: nginx:alpine
    container_name: uav_exam_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./admin-frontend/dist:/usr/share/nginx/html/admin
      - ./miniprogram:/usr/share/nginx/html/miniprogram
    depends_on:
      - backend
      - admin-frontend
    networks:
      - uav_exam_network

volumes:
  mysql_data:
  redis_data:
  uploads:

networks:
  uav_exam_network:
    driver: bridge